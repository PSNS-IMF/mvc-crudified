<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Psns.Common.Mvc.ViewBuilding</name>
    </assembly>
    <members>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.InputPropertyType">
            <summary>
            Represents types of properties that will be displayed on an update view
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.InputPropertyType.Basic">
            <summary>
            An example is a bool
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.InputPropertyType.String">
            <summary>
            Represents a simple text box input
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyAttribute">
            <summary>
            Provides information needed by the CrudViewBuilder to map reference type attributes
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyAttribute.LabelPropertyName">
            <summary>
            The name of the property that will be used as the label when mapping
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyAttribute.ValuePropertyName">
            <summary>
            The name of the property that will be used as the value when mapping
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="labelPropertyName">The name of the property that will be used as the label when mapping</param>
            <param name="valuePropertyName">The name of the property that will be used as the value when mapping</param>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyForeignKeyAttribute">
            <summary>
            Annotates the foreign key id used to represent a singular navigation property
            </summary>
        </member>
        <member name="F:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyForeignKeyAttribute.ForPropertyName">
            <summary>
            The name of the property that this is a foreign key for
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Attributes.ViewComplexPropertyForeignKeyAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="forPropertyName">The name of the property that this is a foreign key for</param>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.DisplayViewTypes">
            <summary>
            Used to annotate which view a property should be displayed on
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.ViewDisplayablePropertyAttribute">
            <summary>
            Configure how a property should be displayed by the View Mapper
            </summary>
        </member>
        <member name="M:Psns.Common.Mvc.ViewBuilding.Attributes.ViewDisplayablePropertyAttribute.#ctor(Psns.Common.Mvc.ViewBuilding.Attributes.DisplayViewTypes[])">
            <summary>
            Constructor
            </summary>
            <param name="viewTypes">Which views this property should be displayed on</param>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Attributes.ViewUpdatablePropertyAttribute">
            <summary>
            Used to display a property on create and update views
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Psns.Common.Mvc.ViewBuilding.Entities.CrudEntityExtensions.GetEnumerableProperties(System.Object)" -->
        <member name="M:Psns.Common.Mvc.ViewBuilding.Entities.CrudEntityExtensions.GetComplexPropertyNames(System.Linq.IOrderedEnumerable{System.Reflection.PropertyInfo})">
            <summary>
            Gets all property names of an object that are decorated with ViewComplexPropertyAttribute or ViewComplexPropertyForeignKeyAttribute.
            </summary>
            <param name="properties">A list of PropertyInfo object to query</param>
            <returns>string[]</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Psns.Common.Mvc.ViewBuilding.Entities.CrudEntityExtensions.GetUpdateProperties(System.Type)" -->
        <member name="M:Psns.Common.Mvc.ViewBuilding.Entities.CrudEntityExtensions.GetPropertyOrder(System.Reflection.PropertyInfo,System.Int32)">
            <summary>
            Gets the order of a given PropertyInfo as annotated by a DisplayAttribute.Order.
            </summary>
            <param name="property">The given PropertyInfo</param>
            <param name="displayOrderCount">An integer with a pre-existing order value.</param>
            <returns>int</returns>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Entities.INameable">
            <summary>
            Represents an object with a string property called Name
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Entities.INameable.Name">
            <summary>
            The Name of the INameable
            </summary>
        </member>
        <member name="T:Psns.Common.Mvc.ViewBuilding.Adapters.RequestContextAdapter">
            <summary>
            An adapter for the HttpContext.Current.Request.RequestContext to assist with testing
            </summary>
        </member>
        <member name="P:Psns.Common.Mvc.ViewBuilding.Adapters.RequestContextAdapter.Context">
            <summary>
            Unless explicitly set, HttpContext.Current.Request.RequestContext is returned
            </summary>
        </member>
    </members>
</doc>
